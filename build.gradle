task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
    maven {
      url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
	compile 'com.google.guava:guava:18.0'
	compile group: 'com.cinchapi', name: 'accent4j', version: '1.0.0-SNAPSHOT', changing:true
	compile group: 'com.cinchapi', name: 'concourse-driver-java', version: '0.5.0-SNAPSHOT', changing:true
    compile group: 'com.cinchapi', name: 'concourse-import', version: '0.5.0-SNAPSHOT', changing:true
	compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'ch.qos.logback:logback-classic:1.0.13'
	compile 'com.google.code.gson:gson:2.2.4'
	compile 'net.sf.trove4j:trove4j:3.0.3'
	compile 'com.github.stephenc.high-scale-lib:high-scale-lib:1.1.4'

	testCompile 'junit:junit:4.11'
	testCompile'com.cinchapi:concourse-ete-test-core:0.5.0-SNAPSHOT'
}

def getVersion = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'bash', 'version.sh'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

ext.globalVersion  = getVersion()

group = 'org.cinchapi'
version = globalVersion

jar {
    manifest {
        attributes("Specificiation-Title": "Runway", "Specificiation-Version": version, "Implementation-Version": version)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

signing {
    sign configurations.archives
}

def getMaven = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'cat', '.maven'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

project.ext.maven = getMaven()

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: project.maven) {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.version = '0.1.6'

            pom.project {
               name 'Runway'
               packaging 'jar'
               description 'The official ORM (Object-Record Mapping) framework for Concourse'
               url 'http://cinchapi.org'

               scm {
                   url 'git@github.com:cinchapi/runway.git'
                   connection 'git@github.com:cinchapi/runway.git'
                   developerConnection 'git@github.com:cinchapi/runway.git'
               }

               licenses {
                   license {
                       name 'The MIT License'
                       url 'http://opensource.org/licenses/MIT'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'jnelson'
                       name 'Jeff Nelson'
                   }
               }
           }
        }
    }
}
