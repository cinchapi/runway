plugins {
    id 'java'
    id 'eclipse'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id "com.jfrog.bintray" version "1.7.3"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

repositories {
    mavenCentral()
    maven {
      url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
      url  'http://cinchapi.bintray.com/maven'
    }
}

// Set the version for all Concourse dependencies
ext.concourseVersion = '0.10.0-SNAPSHOT' // TODO: Change to non-snapshot before merging

dependencies {
	compile 'com.google.guava:guava:18.0'
	compile (group: 'com.cinchapi', name: 'accent4j', version: '1.6.1', changing:true) {
        force = true
    }
	compile group: 'com.cinchapi', name: 'concourse-driver-java', version: concourseVersion, changing:true
  	compile group: 'com.cinchapi', name: 'concourse-import', version: concourseVersion, changing:true
	compile group: 'com.cinchapi', name: 'concourse-plugin-core', version: concourseVersion, changing:true
	compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'ch.qos.logback:logback-classic:1.0.13'
	compile 'com.google.code.gson:gson:2.2.4'
	compile 'net.sf.trove4j:trove4j:3.0.3'
	compile 'com.github.stephenc.high-scale-lib:high-scale-lib:1.1.4'
	compile ('org.reflections:reflections:0.9.9-RC2'){
        exclude group: 'org.javassist', module:'javassist'
    }
    compile 'org.javassist:javassist:3.18.2-GA'

	testCompile 'junit:junit:4.11'
	testCompile group: 'com.cinchapi', name: 'concourse-ete-test-core', version: concourseVersion, changing:true
}

def getVersion = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'bash', 'version.sh'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

group = 'com.cinchapi'
version = getVersion()
// Drop the build component from version number and use that for
// publishing
ext.mavenVersion = version.split('\\.')
ext.mavenVersion[3] = ext.mavenVersion[3].replaceAll("[0-9]+-", "-")
ext.mavenVersion[3] = ext.mavenVersion[3].replaceAll("[0-9]+", "").trim()
ext.mavenVersion = ext.mavenVersion.join(".").replace(".-", "-").replaceAll('\\.$', "")

jar {
    manifest {
        attributes("Specificiation-Title": "Runway", "Specificiation-Version": version, "Implementation-Version": version)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

publishing {
    publications {
        BintrayPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId project.name
            version mavenVersion
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['BintrayPublication']
    pkg {
        repo = mavenVersion.matches('^[0-9]+\\.[0-9]+\\.[0-9]+(-rc[0-9]+){0,1}$') ? 'maven' : 'maven-snapshots'
        name = project.name
        publish = true
        userOrg = 'cinchapi'
        override = true
        version {
            name = mavenVersion
            released = new Date()
        }
    }
}


test {
    testLogging {
        showStandardStreams = true
    }
}
